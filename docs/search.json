[
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html",
    "title": "00. EDA & Modeling",
    "section": "",
    "text": "1 Fine Watch의 행동 데이터 분류 AI 모델링 요청\n2 출시될 시제품에서 수집한 데이터를 바탕으로 6가지 행동 검토 후 계단오르기를 분류할 수 있는 AI 모델 생성 및 중요도 상위 Feature 선별\n\n6가지 행동 패턴 : STANDING, SITTING, LAYING, WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS\n\n3 데이터 설명\n\nFine Watch 23 시제품에서 수집한 데이터\n가속도 센서 데이터 : 일직선으로 움직이는 물체의 선형가속도를 측정하는 센서 데이터\n자이로스코프 센서 데이터 : 회전하는 물체의 각속도를 측정하는 센서 데이터",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#feature-데이터-로드",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#feature-데이터-로드",
    "title": "00. EDA & Modeling",
    "section": "(1) feature 데이터 로드",
    "text": "(1) feature 데이터 로드\n\nfeatures = pd.read_csv(\"f.csv\")\nfeatures.head()\n\n\n\n\n\n\n\n\nsensor\nagg\naxis\nfeature_name\n\n\n\n\n0\ntBodyAcc\nmean()\nX\ntBodyAcc-mean()-X\n\n\n1\ntBodyAcc\nmean()\nY\ntBodyAcc-mean()-Y\n\n\n2\ntBodyAcc\nmean()\nZ\ntBodyAcc-mean()-Z\n\n\n3\ntBodyAcc\nstd()\nX\ntBodyAcc-std()-X\n\n\n4\ntBodyAcc\nstd()\nY\ntBodyAcc-std()-Y",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#고유값-확인",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#고유값-확인",
    "title": "00. EDA & Modeling",
    "section": "(2) 고유값 확인",
    "text": "(2) 고유값 확인\n\nfeatures.sensor.value_counts()\n\nsensor\nfBodyGyro               79\nfBodyAcc                79\nfBodyAccJerk            79\ntBodyAcc                40\ntBodyAccJerk            40\ntBodyGyro               40\ntBodyGyroJerk           40\ntGravityAcc             40\nfBodyBodyGyroJerkMag    13\nfBodyBodyGyroMag        13\nfBodyBodyAccJerkMag     13\nfBodyAccMag             13\ntBodyGyroJerkMag        13\ntBodyGyroMag            13\ntBodyAccJerkMag         13\ntGravityAccMag          13\ntBodyAccMag             13\nangle                    7\nName: count, dtype: int64\n\n\n\nfeatures[\"feature_name\"].value_counts()\n\nfeature_name\nfBodyGyro-bandsEnergy()-25,32    3\nfBodyGyro-bandsEnergy()-49,56    3\nfBodyGyro-bandsEnergy()-25,48    3\nfBodyGyro-bandsEnergy()-1,24     3\nfBodyGyro-bandsEnergy()-49,64    3\n                                ..\ntBodyGyroJerk-min()-X            1\ntBodyGyroJerk-max()-Z            1\ntBodyGyroJerk-max()-Y            1\ntBodyGyroJerk-max()-X            1\nangle(Z,gravityMean)             1\nName: count, Length: 533, dtype: int64\n\n\n\nfeatures[\"agg\"].value_counts()\n\nagg\nbandsEnergy()        126\narCoeff()             60\nmean()                33\nmad()                 33\nmax()                 33\nmin()                 33\nenergy()              33\niqr()                 33\nentropy()             33\nstd()                 33\nsma()                 17\ncorrelation()         15\nmeanFreq()            13\nkurtosis()            13\nskewness()            13\nmaxInds               13\narCoeff()3             5\narCoeff()4             5\narCoeff()2             5\narCoeff()1             5\ntBodyAccMean           1\ntBodyAccJerkMean       1\ntBodyGyroMean          1\ntBodyGyroJerkMean      1\nX                      1\nY                      1\nZ                      1\nName: count, dtype: int64\n\n\n\nfeatures[\"axis\"].value_counts()\n\naxis\nX              76\nY              76\nZ              76\ngravityMean     6\nX,2             5\n               ..\n25,32.1         2\n17,24.1         2\n1,8.1           2\n9,16.1          2\ngravity         1\nName: count, Length: 62, dtype: int64",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#데이터-셋-나누기",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#데이터-셋-나누기",
    "title": "00. EDA & Modeling",
    "section": "(0) 데이터 셋 나누기",
    "text": "(0) 데이터 셋 나누기\n\ny = data[target]\nx = data.drop(target, axis = 1)\n\nx_train, x_val, y_train, y_val = train_test_split(x,y, test_size = 0.3, random_state = 2023)      \n\n- 각 모델의 비교를 위한 데이터 프레임 생성\n\nmodel_name = []\nvalid_data = []\naccuracy_score = []\nF1_score = []\nresult = pd.DataFrame([model_name,valid_data,accuracy_score,F1_score]).T\nresult.columns = ['model_name', 'valid_data', 'accuracy_score', 'F1_score']\nresult\n\n\n\n\n\n\n\n\nmodel_name\nvalid_data\naccuracy_score\nF1_score",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#svm",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#svm",
    "title": "00. EDA & Modeling",
    "section": "(1) SVM",
    "text": "(1) SVM\n\nfrom sklearn.svm import SVC\n\n\nsvc_model = SVC(random_state  = 2023)\nsvc_model.fit(x_train, y_train)\nsvc_pred = svc_model.predict(x_val)\n#svc_pred",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#logistic",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#logistic",
    "title": "00. EDA & Modeling",
    "section": "(2) Logistic",
    "text": "(2) Logistic\n\nfrom sklearn.linear_model import LogisticRegression\n\nlr_model = LogisticRegression(random_state=2023)\nlr_model.fit(x_train, y_train)\nlr_pred = lr_model.predict(x_val)\n\nC:\\Users\\rkdcj\\anaconda3\\envs\\dx\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:460: ConvergenceWarning:\n\nlbfgs failed to converge (status=1):\nSTOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n\nIncrease the number of iterations (max_iter) or scale the data as shown in:\n    https://scikit-learn.org/stable/modules/preprocessing.html\nPlease also refer to the documentation for alternative solver options:\n    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n\n\n\n\nresult.loc[1,:] = ['lr', 'train', np.mean(y_val == lr_pred), f1_score(y_val,lr_pred, average = \"macro\")]\nresult\n\n\n\n\n\n\n\n\nmodel_name\nvalid_data\naccuracy_score\nF1_score\n\n\n\n\n1\nlr\ntrain\n0.984136\n0.985601",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#knn",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#knn",
    "title": "00. EDA & Modeling",
    "section": "(3) KNN",
    "text": "(3) KNN\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\n\nknn_model = KNeighborsClassifier(n_neighbors=3)\nknn_model.fit(x_train, y_train)\nknn_pred = knn_model.predict(x_val)\n\n\nresult.loc[2] = [\"knn\",\"train\",np.mean(knn_pred == y_val), f1_score(y_val,knn_pred, average = \"macro\")] \nresult\n\n\n\n\n\n\n\n\nmodel_name\nvalid_data\naccuracy_score\nF1_score\n\n\n\n\n1\nlr\ntrain\n0.984136\n0.985601\n\n\n2\nknn\ntrain\n0.954674\n0.958345",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#gbm",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#gbm",
    "title": "00. EDA & Modeling",
    "section": "(4) GBM",
    "text": "(4) GBM\n\nfrom sklearn.ensemble import GradientBoostingClassifier\n\n\ngbc_model = GradientBoostingClassifier(random_state = 2023)\ngbc_model.fit(x_train,y_train)\ngbc_pred = gbc_model.predict(x_val)\n\n\nresult.loc[3] = [\"gbc\",\"train\",np.mean(gbc_pred == y_val), f1_score(y_val, gbc_pred, average = \"macro\")]\nresult\n\n\n\n\n\n\n\n\nmodel_name\nvalid_data\naccuracy_score\nF1_score\n\n\n\n\n1\nlr\ntrain\n0.984136\n0.985601\n\n\n2\nknn\ntrain\n0.954674\n0.958345\n\n\n3\ngbc\ntrain\n0.981870\n0.983141",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#xgb",
    "href": "posts/mini projects/Fine Watch/2023-09-20-00 . EDA , modeling.html#xgb",
    "title": "00. EDA & Modeling",
    "section": "(5) XGB",
    "text": "(5) XGB\n\nfrom xgboost import XGBClassifier\n\ndic = {'LAYING' : 2,\n 'SITTING' : 1,\n 'STANDING' : 0,\n 'WALKING' : 3,\n 'WALKING_DOWNSTAIRS' : 4,\n 'WALKING_UPSTAIRS': 5}\n\ny_train_map = [dic[i] for i in y_train]\ny_val_map =  [dic[i] for i in y_val]                                                                     \n\n\nxgb_model = XGBClassifier(learning_rate=0.2, max_depth=2, random_state=2023)\n\nxgb_model.fit(x_train,y_train_map)\n\nxgb_pred = xgb_model.predict(x_val)\n\nresult.loc[5] =  [\"xgb\", \"train\", np.mean(xgb_pred == y_val_map), f1_score(y_val_map, xgb_pred, average = \"macro\")]\nresult\n\n\n\n\n\n\n\n\nmodel_name\nvalid_data\naccuracy_score\nF1_score\n\n\n\n\n1\nlr\ntrain\n0.984136\n0.985601\n\n\n2\nknn\ntrain\n0.954674\n0.958345\n\n\n3\ngbc\ntrain\n0.981870\n0.983141\n\n\n5\nxgb\ntrain\n0.990368\n0.991178",
    "crumbs": [
      "Posts",
      "mini projects",
      "Fine Watch",
      "00. EDA & Modeling"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio",
    "section": "",
    "text": "links\n\nlectureStudymini projectsbig projectspublications\n\n\n\nR for Data Science\nSpecial Topics in Data Visualization\nIntroduction to Python\nSpecial Topics in Big Data Analysis\nSpecial Topics in Machine Learning\nTableau Practice\nDX Consultant Education\n\n\n\n\nISLP Study\nAlgorithm Study\n\n\n\n\nISLP Study\nAlgorithm Study\n\n\n\n\nISLP Study\nAlgorithm Study\n\n\n\n\nISLP Study\nAlgorithm Study\n\n\n\n\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nSep 20, 2023\n\n\n00. EDA & Modeling\n\n\nGC \n\n\n\n\nJul 31, 2023\n\n\n00. quarto blog\n\n\nGC \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About me",
    "section": "contact",
    "text": "contact\n\nE-mail : rkdcjf8232@gmail.com",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About me",
    "section": "Education",
    "text": "Education\n\n전북대학교 통계학 학사(부전공 : 컴퓨터공학) | 2015.03 ~ 2021.02\n전북대학교 통계학 석사 | 2021.03 ~ 2023.02",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#certificate",
    "href": "about.html#certificate",
    "title": "About me",
    "section": "Certificate",
    "text": "Certificate\n\n사회조사분석사 2급\n데이터분석준전문가(ADsP)\nAICE Associate",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#skill",
    "href": "about.html#skill",
    "title": "About me",
    "section": "Skill",
    "text": "Skill\n\nR ⭐⭐⭐⭐\nPython ⭐⭐⭐⭐\nEXCEL ⭐⭐⭐⭐\nSPSS ⭐⭐⭐⭐\nSQL ⭐⭐⭐\nJAVA, C ⭐⭐",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#extracurricular-activities",
    "href": "about.html#extracurricular-activities",
    "title": "About me",
    "section": "Extracurricular Activities",
    "text": "Extracurricular Activities\n\n국민연금공단 빅데이터부 현장실습 | 2020. 03 ~ 2020. 06\n지역 문화산업 융복합 데이터 전문가 과정 | 과학기술정보통신부, 한국데이터산업진흥원 | 2021. 06 ~ 2021. 08\n빅데이터 혁신공유대학사업 서포터즈 |전북대학교 빅데이터 현신공유대학사업| 2021. 07. 01 ~ 2021. 10. 31\nKT AIVLE School DX Consultant Track | KT | 2023. 08. 08 ~ 2024. 01. 25",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#publication",
    "href": "about.html#publication",
    "title": "About me",
    "section": "Publication",
    "text": "Publication\n\n데이터 분석을 통한 지역별 고령친화도 시각화\n\n김영선, 강민구, 이강철 등 | 문화융복합아카이빙연구소 | 2021. 10 | 기록관리/보존\n\n핵심어 추출 및 데이터 증강기법을 이용한 텍스트 분류 모델 성능 개선\n\n이강철, 안정용 | 한국자료분석학회 | 한국자료분석학회 | 2022. 10 | 통계학",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#awards",
    "href": "about.html#awards",
    "title": "About me",
    "section": "Awards",
    "text": "Awards\n\n학회장상 | 한국통계학회 | 2023. 02. 22\nAIVLE Big Project Practical | KT | 2024. 01. 25",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#interest",
    "href": "about.html#interest",
    "title": "About me",
    "section": "Interest",
    "text": "Interest\n\nNLP\nAction Recognition, Object Detection\nData Science\nGrowth Hacking",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "about.html#my-blog",
    "href": "about.html#my-blog",
    "title": "About me",
    "section": "My blog",
    "text": "My blog\n 1. Lecture\n\nR for Data Science\nSpecial Topics in Data Visualization\nIntroduction to Python\nSpecial Topics in Big Data Analysis\nSpecial Topics in Machine Learning\n\n 2. Tableau\n\nTableau Practice\n\n 3. DX\n\nDX Consultant Education\n\n 4. Study\n\nISLP Study\nAlgorithm Study\n\n 5. Projects\n\nMini Project 1 : 행동 데이터 분류 AI 모델링",
    "crumbs": [
      "**About me**"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.intro.html",
    "href": "posts/2023-07-31-00.intro.html",
    "title": "00. quarto blog",
    "section": "",
    "text": "- 어… 일단 평소에도 quarto를 이용해서 웹사이트를 관리했지만… 뭔가 처음 깃허브를 접하구 하시는 분들은 이 플랫폼을 사용할 때 되게 난항이 있을것 같다… (내가 그랬다…)\n- 그리고 원래 만들어 놓았던 사이트는 뭔가 좀 지저분한 느낌이 들어서….\n- 에이블스쿨 하면서 배운것들 기록할 때는 뭔가 깔끔한 공간에 하고 싶기도 하다.\n- 이참에 절차를 확실히 내가 적어두자!\n\n\n- quarto download link : 여기서 quarto를 다운받자!\n\n\n\n- Terminal을 켠다음에 아래와 같은 명령어를 입력한다!\n(그.. 명령어 입력할 때 현재 자기 주피터 킬때 켜지는 폴더로 옮긴 다음에 수행하자… 골치 아프다ㅜㅜ)\nquarto create project website gcsite\n- 그러면 다음과 같은 이미지가 보인다\n\n- 저기 open with 어찌고 보이는데 d버튼 누르면 (don’t open)으로 넘어가니 그걸 선택한 후 엔터를 눌러준다!\n- 그러면 아래 이미지처럼 맨 밑에 gcsite라는 폴더가 생긴 것을 볼 수 있다.\n\n\n\n\n- git bash 쓰는 사람들 많던데 난 github desktop이 훨씬 편하다.\n- git 알못이기 때문에 많은 것을 알기 위해 괴롭고 싶지 않다.\n- 뭐 여튼 깃허브 데스크탑을 킨다.\n- 상단 메뉴바 \\(\\to\\) File \\(\\to\\) Add local repository\n- 그러면 아래와 같은 경고문이 뜬다.\n\n- local하고 연결하고 싶은데 깃허브에는 gcsite가 없으니 대충 만들어 달라는 것임 “create a repository” 를 눌러주자.\n\n- 무시, 걍 create repository ㄱㄱ\n- 그러면 깃허브 데스크탑에서 너 방금 만든거 너꺼 깃허브에 Publish 할거냐고 물어봄\n\n- Publish repository 눌러주면 끝~~ (단, publish할 때 private 체크박스는 해제하구 하자!)\n- 그 다음 내가 생성산 gcsite 저장소 setting으로 넘어가서 pages를 클릭!\n- 아래와 같이 branch를 수정 후 save 버튼 눌러주자\n\n\n\n\n- quarto 원리 : 작성한 ipynb파일 html파일로 출력해서 그 html파일들로 웹사이트를 구성하는 것1\n- step1. posts와 docs라는 폴더를 만들자\n\nposts는 내가 작성하는 ipynb파일들이 들어갈거고, docs에는 html파일이 들어갈 것이다.\n\n- step2. index 파일 수정\n\nindex파일은 뭐랄까 네비게이터 역할이랄까 아래와 같이 바꿔주자\n\n---\ntitle: \"GC site\"\nlisting:\n  contents: posts\n  sort: [date desc, title]\n  type: table\n  categories: true\n  sort-ui: true\n  filter-ui: true\npage-layout: full\ntitle-block-banner: true\n---\n- step3. _quarto.uml 파일 수정 \\(\\to\\) 템플릿이랑 디자인 이쁜거 많으니 본인 입맛에 맞게 수정하면 됩니당\nproject:\n  type: website\n  output-dir : docs  \nwebsite:\n  title: \"GC site\"\n  page-navigation: true\n  navbar:\n    right:\n      - icon : github\n        href : https://github.com/gangcheol/\n  sidebar:\n    style: \"docked\"\n    search: True\n    contents: auto\n    \nformat:\n  html:\n    css: styles.css\n    toc: true\n    code-fold : False\n    code-line-numbers : True\n    code-copy : True\n\ntheme :\n  light : flatly\n  \neditor : visual\n- step4. 앞서 만든 posts폴더에 아무 파일이나 만들어보자\n\n- step5. 그 후 다시 터미널에서 내가 생성한 폴더로 이동\n필자의 경우는 cd gcsite\n- step6. quarto render 입력\n- step7. github desktop보면 난리가 났을 것이다. 막 일을 좀 많이 했음.\n\n로컬하고 연결되어 있으니 로컬이 하고 있는 걸 다적어서 그럼\n\n\n\n저기 내가 밑에 이러한 기록을 init이라고 써놨다. 저건 내가 로컬에서 한 행동을 내 깃허브 로컬에 저장할 건데, 그 행동을 init이라고 쓴거\n이제 저 Commit to main 버튼을 눌러주고 가운데 화면에 뜨는 push origin을 눌러주자!\n\n- 마지막!! 아까 깃허브 로컬 셋팅에서 pases란에 잠시 후에 들어가보면 다음과 같은 것을 볼 수 있다.\n\n- 저 링크로 들어가면 내가 만든 웹사이트 초안을 볼 수 있다.\n- 링크",
    "crumbs": [
      "Posts",
      "00. quarto blog"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.intro.html#install",
    "href": "posts/2023-07-31-00.intro.html#install",
    "title": "00. quarto blog",
    "section": "",
    "text": "- quarto download link : 여기서 quarto를 다운받자!",
    "crumbs": [
      "Posts",
      "00. quarto blog"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.intro.html#website-생성",
    "href": "posts/2023-07-31-00.intro.html#website-생성",
    "title": "00. quarto blog",
    "section": "",
    "text": "- Terminal을 켠다음에 아래와 같은 명령어를 입력한다!\n(그.. 명령어 입력할 때 현재 자기 주피터 킬때 켜지는 폴더로 옮긴 다음에 수행하자… 골치 아프다ㅜㅜ)\nquarto create project website gcsite\n- 그러면 다음과 같은 이미지가 보인다\n\n- 저기 open with 어찌고 보이는데 d버튼 누르면 (don’t open)으로 넘어가니 그걸 선택한 후 엔터를 눌러준다!\n- 그러면 아래 이미지처럼 맨 밑에 gcsite라는 폴더가 생긴 것을 볼 수 있다.",
    "crumbs": [
      "Posts",
      "00. quarto blog"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.intro.html#깃허브-로컬-연결",
    "href": "posts/2023-07-31-00.intro.html#깃허브-로컬-연결",
    "title": "00. quarto blog",
    "section": "",
    "text": "- git bash 쓰는 사람들 많던데 난 github desktop이 훨씬 편하다.\n- git 알못이기 때문에 많은 것을 알기 위해 괴롭고 싶지 않다.\n- 뭐 여튼 깃허브 데스크탑을 킨다.\n- 상단 메뉴바 \\(\\to\\) File \\(\\to\\) Add local repository\n- 그러면 아래와 같은 경고문이 뜬다.\n\n- local하고 연결하고 싶은데 깃허브에는 gcsite가 없으니 대충 만들어 달라는 것임 “create a repository” 를 눌러주자.\n\n- 무시, 걍 create repository ㄱㄱ\n- 그러면 깃허브 데스크탑에서 너 방금 만든거 너꺼 깃허브에 Publish 할거냐고 물어봄\n\n- Publish repository 눌러주면 끝~~ (단, publish할 때 private 체크박스는 해제하구 하자!)\n- 그 다음 내가 생성산 gcsite 저장소 setting으로 넘어가서 pages를 클릭!\n- 아래와 같이 branch를 수정 후 save 버튼 눌러주자",
    "crumbs": [
      "Posts",
      "00. quarto blog"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.intro.html#문서-생성",
    "href": "posts/2023-07-31-00.intro.html#문서-생성",
    "title": "00. quarto blog",
    "section": "",
    "text": "- quarto 원리 : 작성한 ipynb파일 html파일로 출력해서 그 html파일들로 웹사이트를 구성하는 것1\n- step1. posts와 docs라는 폴더를 만들자\n\nposts는 내가 작성하는 ipynb파일들이 들어갈거고, docs에는 html파일이 들어갈 것이다.\n\n- step2. index 파일 수정\n\nindex파일은 뭐랄까 네비게이터 역할이랄까 아래와 같이 바꿔주자\n\n---\ntitle: \"GC site\"\nlisting:\n  contents: posts\n  sort: [date desc, title]\n  type: table\n  categories: true\n  sort-ui: true\n  filter-ui: true\npage-layout: full\ntitle-block-banner: true\n---\n- step3. _quarto.uml 파일 수정 \\(\\to\\) 템플릿이랑 디자인 이쁜거 많으니 본인 입맛에 맞게 수정하면 됩니당\nproject:\n  type: website\n  output-dir : docs  \nwebsite:\n  title: \"GC site\"\n  page-navigation: true\n  navbar:\n    right:\n      - icon : github\n        href : https://github.com/gangcheol/\n  sidebar:\n    style: \"docked\"\n    search: True\n    contents: auto\n    \nformat:\n  html:\n    css: styles.css\n    toc: true\n    code-fold : False\n    code-line-numbers : True\n    code-copy : True\n\ntheme :\n  light : flatly\n  \neditor : visual\n- step4. 앞서 만든 posts폴더에 아무 파일이나 만들어보자\n\n- step5. 그 후 다시 터미널에서 내가 생성한 폴더로 이동\n필자의 경우는 cd gcsite\n- step6. quarto render 입력\n- step7. github desktop보면 난리가 났을 것이다. 막 일을 좀 많이 했음.\n\n로컬하고 연결되어 있으니 로컬이 하고 있는 걸 다적어서 그럼\n\n\n\n저기 내가 밑에 이러한 기록을 init이라고 써놨다. 저건 내가 로컬에서 한 행동을 내 깃허브 로컬에 저장할 건데, 그 행동을 init이라고 쓴거\n이제 저 Commit to main 버튼을 눌러주고 가운데 화면에 뜨는 push origin을 눌러주자!\n\n- 마지막!! 아까 깃허브 로컬 셋팅에서 pases란에 잠시 후에 들어가보면 다음과 같은 것을 볼 수 있다.\n\n- 저 링크로 들어가면 내가 만든 웹사이트 초안을 볼 수 있다.\n- 링크",
    "crumbs": [
      "Posts",
      "00. quarto blog"
    ]
  }
]